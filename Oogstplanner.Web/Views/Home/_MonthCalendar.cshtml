@model MonthCalendarViewModel

<div id="top"></div>

@* Top bar *@
<div class="top-bar-tiny">
    <div class="rectangle-content-tiny">
        <div class="table">
            <div class="table-cell bold resizable-header2">
                <div>@Model.DisplayMonth</div>
            </div>
        </div>
    </div>
</div>

@*- Sowing and harvesting *@
<div class="rectangle-double">
    <div class="rectangle-content">
        <div class="table">
            <div class="table-cell bold resizable-header3">
                ZAAIEN
            </div>
        </div>
    </div>
</div>
<div class="rectangle-double">
    <div class="rectangle-content">
        <div class="table">
            <div class="table-cell bold resizable-header3">
                OOGSTEN
            </div>
        </div>
    </div>
</div>

@*TODO Error handling onfailure, this is a temporary solution. It throws a JavaScript error, but the user can go on.*@
@using (Ajax.BeginForm("UpdateMonth", new AjaxOptions { OnSuccess = "Util.toMain()", OnFailure = "Util.toMain()" }))
{
    @* Main rectangles *@
    <div class="rectangle-vertical rectangle-sowing">
        <div class="rectangle-content bg-no-opacity imgsowing">
            <div class="row">
                <div class="col-md-12">
                    <div class="farmingMonth form-text text-left" id="sowing">
                        @foreach (var action in Model.SowingActions)
                        {
                            @Html.HiddenFor(model => action.Id)
                            <div class="form-inline">
                                <div class="form-group form-text-large-white">
                                	<div class="input-group">
	                                	<span class="input-group-btn">
	                                    	<div class="btn btn-danger input-xs remove-farming-action" id="@string.Format("{0}", action.Id)"><span class="glyphicon glyphicon-remove"></span></div>
                                    	</span>
                                    	@Html.TextBoxFor(model => action.CropCount, new { @class = "form-control input-xs numeric-text-box crop-counter-textbox", type = "number", min = "1", max = "999" }) 
                                    </div>
                                    @Html.DisplayFor(model => action.Crop.Name)
                                    @action.Crop.Race
                                    <span class="crop-count-crop-word">plant(en)</span>
                                    <br/>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="rectangle-vertical rectangle-harvesting">
        <div class="rectangle-content bg-no-opacity imgharvesting">
            <div class="row">
                <div class="col-md-12">
                    <div class="farmingMonth form-text text-left" id="harvesting">
                        @foreach (var action in Model.HarvestingActions)
                        {
                            @Html.HiddenFor(model => action.Id)
                            <div class="form-inline">
                                <div class="form-group form-text-large-white">
                                	<div class="input-group">
	                                	<span class="input-group-btn">
	                                    	<div class="btn btn-danger input-xs remove-farming-action" id="@string.Format("{0}", action.Id)"><span class="glyphicon glyphicon-remove"></span></div>
                                    	</span>
                                    	@Html.TextBoxFor(model => action.CropCount, new { @class = "form-control input-xs numeric-text-box crop-counter-textbox", type = "number", min = "1", max = "999" }) 
                                    </div>
                                    @Html.DisplayFor(model => action.Crop.Name)
                                    @action.Crop.Race
                                    <span class="crop-count-crop-word">plant(en)</span>
                                    <br/>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <input type="button" class="btn btn-default" value="Terug zonder opslaan!" onclick="Util.toMain()" />
    <input type="submit" class="btn btn-success" value="Wijzigingen opslaan!" /><br/>

        
} @* End form *@
